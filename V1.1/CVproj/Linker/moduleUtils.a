;#include <delay.h>
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include "projDefines.h"
;#include "projHeaders.h"
;#include <math.h>
;
;unsigned char getProximity()
; 0005 0008 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0005 0009     char i = 0;
; 0005 000A //    IRLED be iON;
; 0005 000B     delay_ms(1);
;PCODE: $0000000F VOL: 0
;	i -> R17
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0005 000C     i = IRD;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0005 000D //    IRLED be iOFF;
; 0005 000E     return i;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0005 000F }
;PCODE: $0000001B VOL: 0
;eeprom char resetByWDT;
;void controllerReset(void)
; 0005 0012 {
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0005 0013     resetByWDT = 0;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0005 0014     TIMSK = 0;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0005 0015     while(1);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0005 0016 }
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;void lockMotorRoutine(void)
; 0005 0018 {
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0005 0019     fpsCount ++;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0005 001A     if (mV < 4000)
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0005 001B         soundBatteryLow();
;PCODE: $00000032 VOL: 0
; 0005 001C     else
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0005 001D     {
; 0005 001E         resetByWDT = 1;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0005 001F         TIMSK &= ~0x01;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0005 0020         OCR2 = 249;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0005 0021         lockMotor be ON;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0005 0022         delay_ms(1500);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0005 0023         lockMotor be OFF;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0005 0024         TIMSK |= 0x01;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0005 0025         #asm("WDR")
;PCODE: $00000046 VOL: 0
	WDR
;PCODE: $00000047 VOL: 0
; 0005 0026     }
;PCODE: $00000048 VOL: 0
; 0005 0027 }
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;void soundBatteryLow(void)
; 0005 0029 {
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0005 002A     beepSwipe(900, 300, 200);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0005 002B     delay_ms(100);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0005 002C     beepSwipe(3000, 300, 200);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0005 002D     delay_ms(100);
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0005 002E     beepSwipe(3000, 300, 200);
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0005 002F }
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;void soundPowerFailure(void)
; 0005 0031 {
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0005 0032     beepSwipe(900, 300, 200);
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0005 0033     beep(300, 500);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0005 0034 }
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;
;void soundPowerOverFlow(void)
; 0005 0037 {
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0005 0038     beepSwipe(400, 800, 500);
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0005 0039 }
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;
;void soundOK(void)
; 0005 003C {
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0005 003D     beepSwipe(400 , 3000, 200);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0005 003E }
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;void soundQuestion(void)
; 0005 0040 {
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0005 0041     beepSwipe(400,400, 500);
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0005 0042 }
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;void soundAlarm(void)
; 0005 0044 {
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0005 0045     buzzer be ON;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0005 0046     delay_ms(500);
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0005 0047     buzzer be OFF;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0005 0048     delay_ms(300);
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0005 0049 }
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;void soundSuccess(void)
; 0005 004B {
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0005 004C     beep(400,70);
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0005 004D     delay_ms(100);
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0005 004E     beep(400,750);
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0005 004F     beepSwipe(400, 3000, 250);
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0005 0050 }
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;void soundError(void)
; 0005 0052 {
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0005 0053     beepSwipe(3000 , 400, 200);
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0005 0054     beepSwipe(3000 , 400, 200);
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0005 0055 }
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;void soundCancel(void)
; 0005 0057 {
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0005 0058     beepSwipe(3000 , 400, 200);
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0005 0059 }
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;
;void bips(unsigned char count)
; 0005 005C {
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0005 005D     while (count > 0)
;PCODE: $000000DA VOL: 0
;	count -> Y+0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0005 005E     {
; 0005 005F         buzzer be ON;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0005 0060         delay_ms(75);
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0005 0061         buzzer be OFF;
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0005 0062         delay_ms(75);
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0005 0063         count --;
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0005 0064     }
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0005 0065 }
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;void bip(void)
; 0005 0067 {
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0005 0068     buzzer be ON;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0005 0069     delay_ms(100);
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0005 006A     buzzer be OFF;
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0005 006B }
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;void soundTick(void)
; 0005 006D {
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0005 006E     beep(300, 50);
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0005 006F     delay_ms(20);
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0005 0070     beep(3000,50);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0005 0071 }
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;void delay_ms_v(int ms)
; 0005 0073 {
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0005 0074     while(ms > 0)
;PCODE: $0000010F VOL: 0
;	ms -> Y+0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0005 0075     {
; 0005 0076         delay_us(998);
;PCODE: $00000114 VOL: 0
; 0005 0077         ms--;
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0005 0078     }
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0005 0079 
; 0005 007A }
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;void beep(unsigned int f_khz, unsigned int period_ms)
; 0005 007C {
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0005 007D     float tp = 0;
; 0005 007E     f_khz = min(f_khz, 12600);
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;	f_khz -> Y+6
;	period_ms -> Y+4
;	tp -> Y+0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0005 007F     f_khz = max(f_khz, 260);
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0005 0080     tp = (float)1000000 / (float)f_khz; // tp in us
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0005 0081     //now, if ICR = 8, tp = 1us, 16 for 2us
; 0005 0082     TCCR1A=0x82;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0005 0083     TCCR1B=0x19;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0005 0084     ICR1 = max((int)tp * 8 , 600);
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0005 0085     OCR1A = 400;
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0005 0086     delay_ms_v(period_ms);
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0005 0087     TCCR1A=0;
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0005 0088     TCCR1B=0;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0005 0089     ICR1 = 0;
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0005 008A     buzzer be OFF;
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0005 008B }
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;void beepSwipe(unsigned int f_khz1, unsigned int f_khz2, unsigned int period_ms)
; 0005 008D {
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0005 008E     signed char i = 0, steps = 50;
; 0005 008F     signed int inc = ((signed int)f_khz2 - (signed int)f_khz1) / steps;
; 0005 0090     for (i = 0; i < steps; i++)
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;	f_khz1 -> Y+8
;	f_khz2 -> Y+6
;	period_ms -> Y+4
;	i -> R17
;	steps -> R16
;	inc -> R18,R19
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0005 0091         beep(f_khz1 +  (signed int)(i * inc), period_ms / steps);
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0005 0092 }
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
